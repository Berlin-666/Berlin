#include <windows.h>  
#include <stdio.h>  

#define ID_BUTTON 1  
#define ID_TEXTBOX1 2  
#define ID_TEXTBOX2 3  
#define ID_COMBOBOX 4  
#define ID_LABEL 5  

LRESULT CALLBACK WindowProcedure(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);  

int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {  
    WNDCLASS wc = {0};  
    wc.lpszClassName = "CalculatorClass";  
    wc.hInstance = hInstance;  
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);  
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);  
    wc.lpfnWndProc = WindowProcedure;  

    RegisterClass(&wc);  
    HWND hwnd = CreateWindow(  
        "CalculatorClass", "计算器", WS_OVERLAPPEDWINDOW | WS_VISIBLE,  
        100, 100, 300, 250, NULL, NULL, hInstance, NULL  
    );  

    MSG msg;  
    while (GetMessage(&msg, NULL, 0, 0)) {  
        TranslateMessage(&msg);  
        DispatchMessage(&msg);  
    }  

    return msg.wParam;  
}  

void PerformCalculation(HWND hwnd) {  
    char text1[20], text2[20], operator[3];  
    HWND hTextBox1 = GetDlgItem(hwnd, ID_TEXTBOX1);  
    HWND hTextBox2 = GetDlgItem(hwnd, ID_TEXTBOX2);  
    HWND hComboBox = GetDlgItem(hwnd, ID_COMBOBOX);  
    HWND hLabel = GetDlgItem(hwnd, ID_LABEL);  
    
    GetWindowText(hTextBox1, text1, sizeof(text1));  
    GetWindowText(hTextBox2, text2, sizeof(text2));  
    GetLBText(hComboBox, SendMessage(hComboBox, CB_GETCURSEL, 0, 0), operator);  

    double num1 = atof(text1);  
    double num2 = atof(text2);  
    double result = 0.0;  
    char resultText[50];  
    
    if (operator[0] == '+') {  
        result = num1 + num2;  
    } else if (operator[0] == '-') {  
        result = num1 - num2;  
    } else if (operator[0] == '*') {  
        result = num1 * num2;  
    } else if (operator[0] == '/') {  
        if (num2 != 0) {  
            result = num1 / num2;  
        } else {  
            MessageBox(hwnd, "错误：除数不能为零。", "错误", MB_OK | MB_ICONERROR);  
            return;  
        }  
    }  

    sprintf(resultText, "结果: %.2f", result);  
    SetWindowText(hLabel, resultText);  
}  

LRESULT CALLBACK WindowProcedure(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {  
    switch (msg) {  
        case WM_CREATE: {  
            CreateWindow("STATIC", "数字 1:", WS_VISIBLE | WS_CHILD, 20, 20, 80, 20, hwnd, NULL, NULL, NULL);  
            CreateWindow("EDIT", "", WS_VISIBLE | WS_CHILD | WS_BORDER, 100, 20, 150, 20, hwnd, (HMENU)ID_TEXTBOX1, NULL, NULL);  

            CreateWindow("STATIC", "运算符:", WS_VISIBLE | WS_CHILD, 20, 60, 80, 20, hwnd, NULL, NULL);  
            HWND hComboBox = CreateWindow("COMBOBOX", "", WS_VISIBLE | WS_CHILD | CBS_DROPDOWNLIST | WS_VSCROLL, 100, 60, 150, 100, hwnd, (HMENU)ID_COMBOBOX, NULL, NULL);  
            SendMessage(hComboBox, CB_ADDSTRING, 0, (LPARAM)"+");  
            SendMessage(hComboBox, CB_ADDSTRING, 0, (LPARAM)"-");  
            SendMessage(hComboBox, CB_ADDSTRING, 0, (LPARAM)"*");  
            SendMessage(hComboBox, CB_ADDSTRING, 0, (LPARAM)"%");  
            SendMessage(hComboBox, CB_SETCURSEL, 0, 0);  

            CreateWindow("STATIC", "数字 2:", WS_VISIBLE | WS_CHILD, 20, 100, 80, 20, hwnd, NULL, NULL);  
            CreateWindow("EDIT", "", WS_VISIBLE | WS_CHILD | WS_BORDER, 100, 100, 150, 20, hwnd, (HMENU)ID_TEXTBOX2, NULL, NULL);  
            
            CreateWindow("BUTTON", "计算", WS_VISIBLE | WS_CHILD, 100, 140, 80, 30, hwnd, (HMENU)ID_BUTTON, NULL, NULL);  
            CreateWindow("STATIC", "结果:", WS_VISIBLE | WS_CHILD, 20, 180, 80, 20, hwnd, NULL, NULL);  
            CreateWindow("STATIC", "", WS_VISIBLE | WS_CHILD, 100, 180, 150, 20, hwnd, (HMENU)ID_LABEL, NULL, NULL);  
            break;  
        }  

        case WM_COMMAND: {  
            if (LOWORD(wParam) == ID_BUTTON) {  
                PerformCalculation(hwnd);  
            }  
            break;  
        }  

        case WM_DESTROY:  
            PostQuitMessage(0);  
            break;  

        default:  
            return DefWindowProc(hwnd, msg, wParam, lParam);  
    }  
    return 0;  
}  
